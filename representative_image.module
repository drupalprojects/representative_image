<?php

/**
 * @file
 * Primary module hooks for Representative Image module.
 *
 * @TODO the following code is pending to port.
 */

use Drupal\Component\Render\FormattableMarkup;
use Drupal\Core\StringTranslation\TranslatableMarkup;
use Drupal\Core\Url;

/**
 * Implements hook_token_info().
 */
function representative_image_token_info() {
  $tokens = [];

  $entity_definitions = \Drupal::entityTypeManager()->getDefinitions();
  foreach ($entity_definitions as $entity_type_id => $entity_type_definition) {
    $info['representative_image'] = [
      'name' => new TranslatableMarkup('Representative image'),
      'description' => new FormattableMarkup('Replaced with an image from a @name\'s field as defined at the <a href=":settings_form">settings form</a>.', [
        '@name' => $entity_type_definition->getBundleLabel(),
        ':settings_form' => Url::fromRoute('representative_image.settings_form')->toString(),
      ]),
    ];
    $tokens[$entity_type_id] = $info;
  }

  return [
    'tokens' => $tokens,
  ];
}

/**
 * Implements hook_tokens().
 */
function representative_image_tokens($type, $tokens, array $data = array(), array $options = array()) {
  $replacements = array();
  /** @var \Drupal\representative_image\RepresentativeImagePicker $representative_image_picker */
  $representative_image_picker = \Drupal::service('representative_image.picker');

  $entity_definitions = \Drupal::entityTypeManager()->getDefinitions();
  foreach ($entity_definitions as $entity_type_id => $entity_type_definition) {
    if (($type == $entity_type_id) && !empty($data[$entity_type_id])) {
      $entity = $data[$entity_type_id];

      foreach ($tokens as $name => $original) {
        switch ($name) {
          case 'representative_image':
            $replacements[$original] = $representative_image_picker->from($entity);
            break;
        }
      }
    }
  }

  return $replacements;
}

///**
// * Implements hook_features_pipe_alter().
// */
//function representative_image_features_pipe_alter(&$pipe, $data, $export) {
//  if (module_exists('strongarm') && $export['component'] == 'node') {
//    foreach ($data as $content_type) {
//      $pipe['variable'][] = 'representative_image_field_node_' . $content_type;
//    }
//  }
//}
//
///**
// * Implements hook_views_api().
// */
//function representative_image_views_api() {
//  return array(
//    'api' => 3,
//    'path' => drupal_get_path('module', 'representative_image') . '/views',
//  );
//}
//
///**
// * Implements hook_form_alter().
// */
//function representative_image_form_node_type_form_alter(&$form, &$form_state) {
//  if (!isset($form['#node_type']->type)) {
//    return;
//  }
//
//  $type = 'node';
//  $bundle = $form['#node_type']->type;
//
//  // Add a responsive image fieldset.
//  form_load_include($form_state, 'inc', 'representative_image', 'representative_image.admin');
//  representative_image_entity_settings_form($form, $form_state, 'node', entity_get_info('node'), array($bundle));
//
//  // Add handling for the vertical tabs js.
//  $form['#attached']['js'][] = drupal_get_path('module', 'representative_image') . '/js/representative_image.js';
//
//  // Adjust the fieldset.
//  $form[$type]['#title'] = t('Representative image');
//  $form[$type]['#group'] = 'additional_settings';
//}
//
